INFO IMPORTANTE

INVESTIGAR: 
wbs




LLAMADAS:

-You can use Intent.ACTION_DIAL instead of Intent.ACTION_CALL. This shows the dialer with the number already entered, but allows the user to decide wether to actually make the call or not. ACTION_DIAL does not require the CALL_PHONE permission.
-Intent intent = new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + "Your Phone_number"));
startActivity(intent);

Intent Object - Action to make Phone Call
You will use ACTION_CALL action to trigger built-in phone call functionality available in Android device. Following is simple syntax to create an intent with ACTION_CALL action

CALL ACTION: LLAMA DIRECTO
Intent phoneIntent = new Intent(Intent.ACTION_CALL);

CALL DIAL: ABRE EL TELEFONO CON EL NUMERO MARCADO
You can use ACTION_DIAL action instead of ACTION_CALL, in that case you will have option to modify hardcoded phone number before making a call instead of making a direct call.

Intent Object - Data/Type to make Phone Call
To make a phone call at a given number 91-000-000-0000, you need to specify tel: as URI using setData() method as follows -

phoneIntent.setData(Uri.parse("tel:91-000-000-0000"));
The interesting point is that, to make a phone call, you do not need to specify any extra data or data type.




CONSEGUIR UBICACIÓN:

First you need to define a LocationListener to handle location changes.

private final LocationListener mLocationListener = new LocationListener() {
    @Override
    public void onLocationChanged(final Location location) {
        //your code here
    }
};
Then get the LocationManager and ask for location updates

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    mLocationManager = (LocationManager) getSystemService(LOCATION_SERVICE);

    mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, LOCATION_REFRESH_TIME,
            LOCATION_REFRESH_DISTANCE, mLocationListener);
}
And finally make sure that you have added the permission on the Manifest,

For using only network based location use this one

<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
For GPS based location, this one

<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>

Con coordenadas: 
http://stackoverflow.com/questions/33415033/getting-current-location-in-android-studio-app
http://stackoverflow.com/questions/16498450/how-to-get-android-gps-location




SACAR EL PAÍS DONDE ESTOY: 
This will get the country code:

 String locale = context.getResources().getConfiguration().locale.getCountry(); 
can also replace getCountry() with getISO3Country() to get a 3 letter ISO code for the country. This will get the country name:

 String locale = context.getResources().getConfiguration().locale.getDisplayCountry();
This seems easier than the other methods and rely upon the localisation settings on the phone, so if a US user is abroad they probably still want Fahrenheit and this will work :)




CÓDIGOS ISO3:
http://www.nationsonline.org/oneworld/country_code_list.htm
http://www.worldatlas.com/aatlas/ctycodes.htm
https://unstats.un.org/unsd/tradekb/Knowledgebase/50347/Country-Code




NUMEROS DE EMERGENCIA EN EL MUNDO: 
https://en.wikipedia.org/wiki/List_of_emergency_telephone_numbers
http://chartsbin.com/view/1983